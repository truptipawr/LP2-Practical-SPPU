1) BFS code:-
from collections import deque


def bfs(graph, start):

    queue = deque([start])
    visited = set([start])

    while queue:
        node = queue.popleft()  
        print(node, end=" ")  

       
        for neighbor in graph[node]:
            if neighbor not in visited:
                visited.add(neighbor)
                queue.append(neighbor)

# Example graph
graph = {
    'A': ['B', 'C'],
    'B': ['A', 'D', 'E'],
    'C': ['A', 'F'],
    'D': ['B'],
    'E': ['B', 'F'],
    'F': ['C', 'E']
}

bfs(graph, 'A')

Output:-
PS C:\Users\Trupti Pawar\OneDrive\Desktop\AI> & "C:/Users/Trupti Pawar/AppData/Local/Programs/Python/Python312/python.exe" "c:/Users/Trupti Pawar/OneDrive/Desktop/AI/bfs.py"
A B C D E F 

2)DFS code:-
def dfs(graph, node, visited=None):
    if visited is None:
        visited = set() 

    visited.add(node) 
    print(node, end=" ")  

   
    for neighbor in graph[node]:
        if neighbor not in visited:
            dfs(graph, neighbor, visited)

# Example graph 
graph = {
    'A': ['B', 'C'],
    'B': ['A', 'D', 'E'],
    'C': ['A', 'F'],
    'D': ['B'],
    'E': ['B', 'F'],
    'F': ['C', 'E']
}


dfs(graph, 'A')

Output:-
PS C:\Users\Trupti Pawar\OneDrive\Desktop\AI> & "C:/Users/Trupti Pawar/AppData/Local/Programs/Python/Python312/python.exe" "c:/Users/Trupti Pawar/OneDrive/Desktop/AI/dfs.py"
A B D E F C 
